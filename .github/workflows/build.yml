name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    name: python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v1
      - name: setting up python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: caching pip storage
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.OS }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.python-version }}-pip
      - name: caching virtualenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.OS }}-${{ matrix.python-version }}-virtualenvs-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.python-version }}-virtualenvs
      - name: installing pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv sync --dev
          pipenv --venv
        env:
          PIPENV_NOSPIN: 1
      - name: running tests
        run: pipenv run green
      - name: setting up install
        run: python setup.py install
      - name: uploading coverage data
        run: |
          pipenv run coverage xml
          max_retry=5
          counter=0
          until pipenv run codecov --required -X search gcov -f coverage.xml --flags unittests
          do
            [[ counter -eq $max_retry ]] && echo "::error::reached maximum retries" && exit 1
            ((counter++))
            WAITING=$((10 * counter))
            echo "::warning::upload failed (repeating in $WAITING seconds)"
            sleep $WAITING
          done
