name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    name: python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v1
      - name: setting up python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: caching pip storage
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.OS }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.python-version }}-pip
      - name: caching poetry environment
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.OS }}-${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.python-version }}-poetry
      - name: installing poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry --pre
          pip install poetry-dynamic-versioning
      - name: installing dependencies
        run: poetry install
      - name: running tests
        run: poetry run green
      - name: building
        run: poetry build
      - name: generate coverage xml
        run: poetry run coverage xml
      - name: uploading coverage to codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: python ${{ matrix.python-version }}
