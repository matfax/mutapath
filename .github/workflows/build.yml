name: build

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths:
      - '**.py'
      - '**/poetry.lock'
      - '**/pyproject.toml'
      - '.github/workflows/build.yml'
jobs:
  build:
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        poetry-version: [1.5.1]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1.0.0
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}
      - uses: actions/checkout@v3.5.3
      - name: setting up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.6.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: setting up poetry ${{ matrix.poetry-version }}
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - uses: allanchain/poetry-cache-action@release
        with:
          ensure-module: green
          install-args: -n -vv
      - name: running tests
        run: poetry run green -vv
      - name: building
        run: poetry build -n -vv
      - name: generate coverage xml
        run: poetry run coverage xml
      - name: uploading coverage to codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: python ${{ matrix.python-version }} on ${{ runner.os }}
